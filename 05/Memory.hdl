// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux(in=load, sel=address[14], a=l0, b=l1);
    RAM16K(in=in, load=l0, address=address[0..13], out=sram);
    DMux(in=l1, sel=address[13], a=l2, b=l3);
    Screen(in=in, load=l2, address=address[0..12], out=oscr);
    Keyboard(out=okb);

    Or(a=address[11], b=address[10], out=x1);
    Or(a=x1, b=address[9], out=x2);
    Or(a=x2, b=address[8], out=x3);
    Or(a=x3, b=address[7], out=x4);
    Or(a=x4, b=address[6], out=x5);
    Or(a=x5, b=address[5], out=x6);
    Or(a=x6, b=address[4], out=x7);
    Or(a=x7, b=address[3], out=x8);
    Or(a=x8, b=address[2], out=x9);
    Or(a=x9, b=address[1], out=x10);
    Or(a=x10, b=address[0], out=x11);

    Mux16(a=okb, b=false, sel=x11, out=oa);
    Mux16(a=oscr, b=oa, sel=address[13], out=ob);
    Mux16(a=sram, b=ob, sel=address[14], out=out);
}